(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(i,".").concat(b)]||d[b]||u[b]||a;return n?o.a.createElement(m,c(c({ref:t},s),{},{components:n})):o.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(106)),i={id:"installation",title:"Installation",sidebar_label:"1. Installation",slug:"/gateway/installation"},c={unversionedId:"gateway/installation",id:"gateway/installation",isDocsHomePage:!1,title:"Installation",description:'This guide uses Docker Compose to deploy Tyk.  Click on "Other Install Methods" in the sidebar to view the rest of the provided installation methods',source:"@site/docs/gateway/installation.md",slug:"/gateway/installation",permalink:"/tyk-gw-docker-dev-env/docs/gateway/installation",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/gateway/installation.md",version:"current",sidebar_label:"1. Installation",sidebar:"someSidebar",previous:{title:"Tyk Gateway Overview",permalink:"/tyk-gw-docker-dev-env/docs/gateway/overview"},next:{title:"Adding Your First API",permalink:"/tyk-gw-docker-dev-env/docs/gateway/your-first-api"}},l=[{value:"Docker-Compose",id:"docker-compose",children:[]}],s={toc:l};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,'This guide uses Docker Compose to deploy Tyk.  Click on "Other Install Methods" in the sidebar to view the rest of the provided installation methods'),Object(a.b)("h3",{id:"docker-compose"},"Docker-Compose"),Object(a.b)("p",null,"First, we clone the docker-compose repository"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ git clone https://github.com/sedkis/tyk-gw-docker-dev-env\nCloning into 'tyk-gw-docker-dev-env'...\n\n$ cd tyk-gw-docker-dev-env \n")),Object(a.b)("p",null,"And then we run Tyk Gateway and Redis.  We can pass ",Object(a.b)("inlineCode",{parentName:"p"},"-d")," flag to run the processes in the background."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ docker-compose up\n")),Object(a.b)("p",null,"When we're done, we can remove Tyk and Redis, along with associated volumes, with ",Object(a.b)("inlineCode",{parentName:"p"},"docker-compose"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ docker-compose down -v\n")))}p.isMDXComponent=!0}}]);